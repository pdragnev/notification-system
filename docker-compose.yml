version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5673:5672'
      - '15673:15672'
    networks:
      - notification_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: notification_service
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./scripts/init-users.sql:/docker-entrypoint-initdb.d/init-users.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - notification_network

  notification-api:
    image: notification-api
    environment:
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672/
      RABBITMQ_NOTIFICATION_QUEUE_NAME: notificationsQueue
      DLX_EXCHANGE_NAME: notifications_dlx_exch
      DLX_QUEUE_NAME: notifications_dlx_queue
    ports:
      - '8080:8080'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://notification-api:8080/health']
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - notification_network

  notification-worker:
    image: notification-worker
    environment:
      DATABASE_URL: postgres://postgres:mysecretpassword@postgres:5432/notification_service
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672/
      RABBITMQ_NOTIFICATION_QUEUE_NAME: notificationsQueue
      MAX_WORKERS: 12
      MAX_RETRY_COUNT: 3
      MAILCHIMP_API_KEY: ${MAILCHIMP_API_KEY}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_ACC_SID: ${TWILIO_ACC_SID}
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      notification-api:
        condition: service_healthy
    networks:
      - notification_network

networks:
  notification_network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
